{"version":3,"sources":["webpack:///./src/index.css?ec7a","src/index.css","src/WheelOfFortune.js","src/Components/PostOutlook.js","src/App.js","src/reportWebVitals.js","src/index.js","src/assets/images/knob.png"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","AnimatedSvg","Animated","createAnimatedComponent","Svg","Dimensions","get","width","height","WheelOfFortune","props","prepareWheel","Rewards","rewards","RewardCount","length","numberOfSegments","fontSize","onedeg","angleBySegment","angleOffset","winner","Math","floor","random","_wheelPaths","makeWheel","_angle","Value","onRef","resetWheelState","setState","enabled","started","finished","gameScreen","wheelOpacity","imageLeft","imageTop","_tryAgain","angleListener","_onPress","addListener","event","state","angle","value","data","Array","from","fill","arcs","d3Shape","colors","map","arc","index","instance","padAngle","outerRadius","innerRadius","path","color","centroid","_getWinnerIndex","deg","abs","round","duration","timing","toValue","useNativeDriver","start","winnerIndex","getWinner","_textRender","x","y","number","textColor","textAnchor","fontWeight","_","j","textAngle","dy","key","charAt","rotation","origin","x1","y1","x2","y2","stroke","_renderSvgWheel","View","style","styles","container","_renderKnob","alignItems","justifyContent","transform","rotate","interpolate","inputRange","outputRange","backgroundColor","borderRadius","borderWidth","borderColor","opacity","viewBox","margin","toString","d","strokeWidth","knobSize","YOLO","modulo","divide","subtract","zIndex","translateY","Image","source","knobSource","require","this","undefined","TouchableOpacity","onPress","playButton","position","padding","_renderTopToPlay","Component","StyleSheet","create","startText","PostOutlook","quote","title","image","description","hashtag","Text","Helmet","charset","http-equiv","name","property","participants","App","buttonPress","child","winnerValue","wheelOptions","ref","ImageBackground","uri","fixed","containter2","inputLayer","inputFieldStyle","spinTitle","startButtonView","startButton","startButtonText","winnerView","winnerText","tryAgainButton","tryAgainText","ScrollView","wheelOfFortune","FacebookShareButton","url","FacebookIcon","size","marginTop","flex","flexDirection","top","left","right","bottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/app.675d8f29.chunk.js","sourcesContent":["var api = require(\"!C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n:root {\\n  --wheel-font: 'Lato', 'Quicksand', sans-serif;\\n  --wheel-size: 400px;\\n  --wheel-slice-spacing: 50px;\\n  --wheel-border-size: 5px;\\n  --wheel-color: #da3768;\\n  --neutral-color: white;\\n  --PI: 3.14159265358979;\\n  --nb-item: 0;\\n  --item-nb: 0;\\n  --selected-item: 0;\\n  --nb-deg: 5;\\n  --spinning-duration: 4s;\\n  --reset-duration: 0.25s;\\n}\\n\\n/* Conteneur de la roue = cercle rose extérieur */\\n.wheel-container {\\n  display: block;\\n  position: relative;\\n  box-sizing: content-box;\\n  width: calc(var(--wheel-size) + 2 * var(--wheel-border-size));\\n  height: calc(var(--wheel-size) + 2 * var(--wheel-border-size));\\n  padding: 3px;\\n  margin: auto;\\n  background-color: var(--neutral-color);\\n  border: solid var(--wheel-color) 3px;\\n  border-radius: 50%;\\n  user-select: none;\\n}\\n\\n/* Triangle de sélection = 1 rose +  1 blanc */\\n.wheel-container::before,\\n.wheel-container::after {\\n  content: '';\\n  display: block;\\n  position: absolute;\\n  height: 0;\\n  width: 0;\\n  top: 50%;\\n  transform: translateY(-50%);\\n  z-index: 2;\\n  border: solid transparent 20px;\\n  border-left-width: 0;\\n}\\n\\n.wheel-container::before {\\n  right: 0px;\\n  border-right-color: var(--wheel-color);\\n}\\n\\n.wheel-container::after {\\n  right: -5px;\\n  border-right-color: var(--neutral-color);\\n}\\n\\n/* Roue */\\n.wheel {\\n  display: block;\\n  position: relative;\\n  box-sizing: content-box;\\n  margin: auto;\\n  width: var(--wheel-size);\\n  height: var(--wheel-size);\\n  overflow: hidden;\\n  border-radius: 50%;\\n  border: solid var(--wheel-color) var(--wheel-border-size);\\n  background-color: var(--wheel-color);\\n  transition: transform var(--reset-duration);\\n  transform: rotate(0deg);\\n  cursor: pointer;\\n}\\n\\n.wheel.spinning {\\n  transition: transform var(--spinning-duration);\\n  transform: rotate(calc(var(--nb-deg) * 360deg + (-360deg * var(--selected-item) / var(--nb-item, 1))));\\n}\\n\\n/* Centre de la roue = rond blanc au centre */\\n.wheel::after {\\n  display: block;\\n  position: absolute;\\n  content: '';\\n  background-color: var(--neutral-color);\\n  width: 25px;\\n  height: 25px;\\n  z-index: 2;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  border-radius: 50%;\\n}\\n\\n/* Element sur la roue */\\n.wheel-item {\\n  display: block;\\n  position: absolute;\\n  box-sizing: border-box;\\n\\n  /* position de l'item */\\n  top: 50%;\\n  left: 50%;\\n  width: 50%;\\n  transform-origin: center left;\\n  transform: translateY(-50%) rotate(calc(var(--item-nb) * (360deg / var(--nb-item, 1))));\\n\\n  /* texte */\\n  color: var(--neutral-color);\\n  text-align: right;\\n  padding: 0 25px 0 50px;\\n  font-family: var(--wheel-font);\\n}\\n\\n/* Background de l'élément = triangle rose plus clair */\\n.wheel-item:before {\\n  content: ' ';\\n  display: block;\\n  position: absolute;\\n  box-sizing: border-box;\\n  z-index: -1;\\n  width: 0;\\n  height: 0;\\n  top: 50%;\\n  left: 50%;\\n  transform: translate(-50%, -50%);\\n  padding-left: 0px;\\n  opacity: 0.25;\\n\\n  /* \\n    Largeur du triangle\\n    Je ne sais pas pourquoi j'ai besoin d'ajouter \\n      \\\" + var(--wheel-size) / 2 \\\" dans slice-max-width  ==> donne 2.PI.R + R\\n    mais globalement ca marche a peu près bien \\n    TODO: A étudier \\n  */\\n  --slice-max-width: calc(var(--PI) * var(--wheel-size) + var(--wheel-size) / 2);\\n  --slice-width: calc((var(--slice-max-width) / var(--nb-item)) - var(--wheel-slice-spacing));\\n  border: solid transparent calc(var(--slice-width) / 2);\\n  border-left: solid transparent 0;\\n  /* profondeur du triangle = du centre de la roue à la bordure = 300px / 2 */\\n  border-right: solid var(--neutral-color) calc(var(--wheel-size) / 2);\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, {Component} from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Animated,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport * as d3Shape from 'd3-shape';\r\n\r\nimport Svg, {G, Text, TSpan, Path, Pattern , Rect,Line\r\n} from 'react-native-svg';\r\n\r\nconst AnimatedSvg = Animated.createAnimatedComponent(Svg);\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\nclass WheelOfFortune extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      enabled: false,\r\n      started: false,\r\n      finished: false,\r\n      winner: null,\r\n      gameScreen: new Animated.Value(height / 2),\r\n      wheelOpacity: new Animated.Value(1),\r\n      imageLeft: new Animated.Value(width / 2 - 30),\r\n      imageTop: new Animated.Value(height / 2 - 70),\r\n    };\r\n    this.angle = 0;\r\n\r\n    this.prepareWheel();\r\n  }\r\n\r\n  prepareWheel = () => {\r\n    this.Rewards = this.props.options.rewards;\r\n    this.RewardCount = this.Rewards.length;\r\n\r\n    this.numberOfSegments = this.RewardCount;\r\n    this.fontSize = 32;\r\n    this.onedeg = 360;\r\n    this.angleBySegment = this.onedeg / this.numberOfSegments;\r\n    this.angleOffset = this.angleBySegment / 2;\r\n    this.winner = this.props.options.winner\r\n      ? this.props.options.winner\r\n      : Math.floor(Math.random() * this.numberOfSegments);\r\n\r\n    this._wheelPaths = this.makeWheel();\r\n    this._angle = new Animated.Value(0);\r\n\r\n    this.props.options.onRef(this);\r\n  };\r\n\r\n  resetWheelState = () => {\r\n    this.setState({\r\n      enabled: false,\r\n      started: false,\r\n      finished: false,\r\n      winner: null,\r\n      gameScreen:new Animated.Value(height / 2),\r\n      wheelOpacity: new Animated.Value(1),\r\n      imageLeft: new Animated.Value(width / 2 - 30),\r\n      imageTop: new Animated.Value(height / 2 - 70),\r\n    });\r\n  };\r\n\r\n  _tryAgain = () => {\r\n    this.prepareWheel();\r\n    this.resetWheelState();\r\n    this.angleListener();\r\n    this._onPress();\r\n  };\r\n\r\n  angleListener = () => {\r\n    this._angle.addListener(event => {\r\n      if (this.state.enabled) {\r\n        this.setState({\r\n          enabled: false,\r\n          finished: false,\r\n        });\r\n      }\r\n\r\n      this.angle = event.value;\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.options.onRef(undefined);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.angleListener();\r\n  }\r\n\r\n  makeWheel = () => {\r\n    const data = Array.from({length: this.numberOfSegments}).fill(1);\r\n    const arcs = d3Shape.pie()(data);\r\n    var colors = this.props.options.colors\r\n      ? this.props.options.colors\r\n      : [\r\n          '#E07026',\r\n          '#E8C22E',\r\n          '#ABC937',\r\n          '#4F991D',\r\n          '#22AFD3',\r\n          '#5858D0',\r\n          '#7B48C8',\r\n          '#D843B9',\r\n          '#E23B80',\r\n          '#D82B2B',\r\n        ];\r\n    return arcs.map((arc, index) => {\r\n      const instance = d3Shape\r\n        .arc()\r\n        .padAngle(0.001)\r\n        .outerRadius(width / 2)\r\n        .innerRadius(this.props.options.innerRadius || 100);\r\n      return {\r\n        path: instance(arc),\r\n        color: colors[index % colors.length],\r\n        value: this.Rewards[index],\r\n        centroid: instance.centroid(arc),\r\n      };\r\n    });\r\n  };\r\n\r\n  _getWinnerIndex = () => {\r\n    const deg = Math.abs(Math.round(this.angle % this.onedeg));\r\n    // wheel deging counterclockwise\r\n    if (this.angle < 0) {\r\n      return Math.floor(deg / this.angleBySegment);\r\n    }\r\n    // wheel deging clockwise\r\n    return (\r\n      (this.numberOfSegments - Math.floor(deg / this.angleBySegment)) %\r\n      this.numberOfSegments\r\n    );\r\n  };\r\n\r\n  _onPress = () => {\r\n    const duration = this.props.options.duration || 10000;\r\n\r\n    this.setState({\r\n      started: true,\r\n    });\r\n    Animated.timing(this._angle, {\r\n      toValue:\r\n        365 -\r\n        this.winner * (this.onedeg / this.numberOfSegments) +\r\n        360 * (duration / 1000),\r\n      duration: duration,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      const winnerIndex = this._getWinnerIndex();\r\n      this.setState({\r\n        finished: true,\r\n        winner: this._wheelPaths[winnerIndex].value,\r\n      });\r\n      this.props.getWinner(this._wheelPaths[winnerIndex].value, winnerIndex);\r\n    });\r\n  };\r\n\r\n  _textRender = (x, y, number, i) => (\r\n    <Text\r\n      x={x - number.length * 5}\r\n      y={y - 80}\r\n      fill={\r\n        this.props.options.textColor ? this.props.options.textColor : '#fff'\r\n      }\r\n      textAnchor=\"c\"\r\n      fontSize={42}\r\n      fontWeight=\"bold\"\r\n      >\r\n      {Array.from({length: number.length}).map((_, j) => {\r\n        // Render reward text vertically\r\n        if (this.props.options.textAngle === 'vertical') {\r\n          return (\r\n            <TSpan x={x} dy={this.fontSize} key={`arc-${i}-slice-${j}`}>\r\n              {number.charAt(j)}\r\n            </TSpan>\r\n          );\r\n        }\r\n        // Render reward text horizontally\r\n        else {\r\n          return (\r\n            // <TSpan\r\n            //   y={y - 40}\r\n            //   dx={this.fontSize * 0.07}\r\n            //   key={`arc-${i}-slice-${j}`}>\r\n            //   {number.charAt(j)}\r\n            // </TSpan>\r\n            \r\n            <Svg height=\"100\" width=\"200\">\r\n  <G rotation=\"50\" origin=\"100, 50\">\r\n    <Line x1=\"60\" y1=\"10\" x2=\"140\" y2=\"10\" stroke=\"#060\" />\r\n\r\n    <Rect x=\"60\" y=\"20\" height=\"50\" width=\"80\" stroke=\"#060\" fill=\"#060\" />\r\n\r\n    <Text x=\"100\" y=\"75\" stroke=\"#600\" fill=\"#600\" textAnchor=\"middle\">\r\n      Text grouped with shapes\r\n    </Text>\r\n  </G>\r\n</Svg>\r\n          );\r\n        }\r\n      })}\r\n    </Text>\r\n  );\r\n\r\n  _renderSvgWheel = () => {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this._renderKnob()}\r\n        <Animated.View\r\n          style={{\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transform: [\r\n              {\r\n                rotate: this._angle.interpolate({\r\n                  inputRange: [-this.onedeg, 0, this.onedeg],\r\n                  outputRange: [\r\n                    `-${this.onedeg}deg`,\r\n                    `0deg`,\r\n                    `${this.onedeg}deg`,\r\n                  ],\r\n                }),\r\n              },\r\n            ],\r\n            backgroundColor: this.props.options.backgroundColor\r\n              ? this.props.options.backgroundColor\r\n              : '#fff',\r\n            width: height/2,\r\n            height:height/2,\r\n            borderRadius: (width - 20) / 2,\r\n            borderWidth: this.props.options.borderWidth\r\n              ? this.props.options.borderWidth\r\n              : 2,\r\n            borderColor: this.props.options.borderColor\r\n              ? this.props.options.borderColor\r\n              : '#fff',\r\n            opacity: this.state.wheelOpacity,\r\n          }}>\r\n          <AnimatedSvg\r\n            width={this.state.gameScreen}\r\n            height={this.state.gameScreen}\r\n            viewBox={`0 0 ${width} ${width}`}\r\n            style={{\r\n              transform: [{rotate: `-${this.angleOffset}deg`}],\r\n              margin: 10,\r\n            }}>\r\n            <G y={width / 2} x={width / 2}>\r\n              {this._wheelPaths.map((arc, i) => {\r\n                const [x, y] = arc.centroid;\r\n                const number = arc.value.toString();\r\n\r\n                return (\r\n                  <G key={`arc-${i}`}>\r\n                    <Path d={arc.path} strokeWidth={2} fill={arc.color} />\r\n                    <G\r\n                      rotation={\r\n                        (i * this.onedeg) / this.numberOfSegments +\r\n                        this.angleOffset\r\n                      }\r\n                      origin={`${x}, ${y}`}>\r\n                      {this._textRender(x, y, number, i)}\r\n                    </G>\r\n                  </G>\r\n                );\r\n              })}\r\n            </G>\r\n          </AnimatedSvg>\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  _renderKnob = () => {\r\n    const knobSize = this.props.options.knobSize\r\n      ? this.props.options.knobSize\r\n      : 20;\r\n    // [0, this.numberOfSegments]\r\n    const YOLO = Animated.modulo(\r\n      Animated.divide(\r\n        Animated.modulo(\r\n          Animated.subtract(this._angle, this.angleOffset),\r\n          this.onedeg,\r\n        ),\r\n        new Animated.Value(this.angleBySegment),\r\n      ),\r\n      1,\r\n    );\r\n\r\n    return (\r\n      <Animated.View\r\n        style={{\r\n          width: knobSize,\r\n          height: knobSize * 2,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n          opacity: this.state.wheelOpacity,\r\n          transform: [\r\n            {\r\n              rotate: YOLO.interpolate({\r\n                inputRange: [-1, -0.5, -0.0001, 0.0001, 0.5, 1],\r\n                outputRange: [\r\n                  '0deg',\r\n                  '0deg',\r\n                  '35deg',\r\n                  '-35deg',\r\n                  '0deg',\r\n                  '0deg',\r\n                ],\r\n              }),\r\n            },\r\n          ],\r\n        }}>\r\n        <Svg\r\n          width={knobSize}\r\n          height={(knobSize * 100) / 57}\r\n          viewBox={`0 0 57 100`}\r\n          style={{\r\n            transform: [{translateY: 8}],\r\n          }}>\r\n          <Image\r\n            source={\r\n              this.props.options.knobSource\r\n                ? this.props.options.knobSource\r\n                : require('./assets/images/knob.png')\r\n            }\r\n            style={{ width: knobSize, height: (knobSize * 100) / 57 }}\r\n          />\r\n        </Svg>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  _renderTopToPlay() {\r\n    if (this.state.started == false) {\r\n      return (\r\n        <TouchableOpacity onPress={() => this._onPress()}>\r\n          {this.props.options.playButton()}\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity\r\n          style={{\r\n            position: 'absolute',\r\n            width: width,\r\n            height: height / 2,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}>\r\n          <Animated.View style={[styles.content, {padding: 10}]}>\r\n            {this._renderSvgWheel()}\r\n          </Animated.View>\r\n        </TouchableOpacity>\r\n        {this.props.options.playButton ? this._renderTopToPlay() : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WheelOfFortune;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // flex: 1,\r\n    // justifyContent: 'center',\r\n    // alignItems: 'center',\r\n    // marginTop:250\r\n   \r\n  },\r\n  content: {},\r\n  startText: {\r\n    // fontSize: 50,\r\n    // color: '#fff',\r\n    // fontWeight: 'bold',\r\n    // textShadowColor: 'rgba(0, 0, 0, 0.4)',\r\n    // textShadowOffset: {width: -1, height: 1},\r\n    // textShadowRadius: 10,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n    View,\r\n    Text \r\n  } from 'react-native';\r\n// import { useLocation } from \"react-router-dom\";\r\nexport default function PostOutlook(props) {\r\n\r\n   let currentUrl = \"http://www.camperstribe.com\";\r\n   let quote = props.quote !== undefined ? props.quote : \"Celebrate this fest like Smart Fest\";\r\n   let title = props.title !== undefined ? props.title : \"Poorliya - Mobile World is yours to explore\";\r\n   let image = props.image !== undefined ? props.image : \"https://www.gizbot.com/img/2020/07/raksha-bandhan-gifts-ideas-premium-smartphones-1596206640.jpg\";\r\n   let description = props.description !== undefined ? props.description  : \"CampersTribe lets you experience the camping culture. We discover the hidden gems in the nearby to help you connect with nature & yourself by learning in the woods, on the riverbank under the open sky.\" +\r\n\"Trust us, its million dollars experience to ride away from city life, pitch a tent, do campfire and endless talk!\" +\r\n\"So, join us on this voyage, and explore the beauty and miracle of being yourself!\";\r\n   let hashtag = props.hashtag !== undefined ? props.hashtag : \"#camperstribe\";\r\nreturn (\r\n    <View>\r\n    <Text>emay </Text>\r\n <Helmet>\r\n     <title>{title}</title>\r\n     <meta charset=\"utf-8\" />\r\n     <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n     <meta name=\"csrf_token\" content=\"\" />\r\n     <meta property=\"type\" content=\"website\" />\r\n     <meta property=\"url\" content={currentUrl} />\r\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"/>\r\n     <meta name=\"msapplication-TileColor\" content=\"#ffffff\" />\r\n     <meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\" />\r\n     <meta name=\"theme-color\" content=\"#ffffff\" />\r\n     <meta name=\"_token\" content=\"\" />\r\n     <meta name=\"robots\" content=\"noodp\" />\r\n     <meta property=\"title\" content={title} />\r\n     <meta property=\"quote\" content={quote} />\r\n     <meta name=\"description\" content={description} />\r\n     <meta property=\"image\" content={image} />\r\n     <meta property=\"og:locale\" content=\"en_US\" />\r\n     <meta property=\"og:type\" content=\"website\" />\r\n     <meta property=\"og:title\" content={title} />\r\n     <meta property=\"og:quote\" content={quote} />\r\n     <meta property=\"og:hashtag\" content={hashtag} />\r\n     <meta property=\"og:image\" content={image} />\r\n     <meta content=\"image/*\" property=\"og:image:type\" />\r\n     <meta property=\"og:url\" content={currentUrl} />\r\n     <meta property=\"og:site_name\" content=\"CampersTribe\" />\r\n     <meta property=\"og:description\" content={description} />   </Helmet> \r\n     </View>\r\n);\r\n}","import React, { Component } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity, Dimensions, ImageBackground, ScrollView\n} from 'react-native';\nimport { FacebookShareButton, FacebookIcon } from \"react-share\";\nimport WheelOfFortune from './WheelOfFortune';\nimport PostOutlook from './Components/PostOutlook'\nconst participants = [\n  '10% Discount',\n  '50% Discount on Accessories',\n  '5.1 Home Theatre',\n  'NeckBand',\n  'None',\n  'SmartBand',\n  'HeadSet',\n  'BackCase',\n  'None',\n\n];\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      winnerValue: null,\n      winnerIndex: null,\n      started: false,\n    };\n    this.child = null;\n  }\n\n  buttonPress = () => {\n    this.setState({\n      started: true,\n    });\n    this.child._onPress();\n  };\n\n  render() {\n    const wheelOptions = {\n      rewards: participants,\n      knobSize: 30,\n      borderWidth: 5,\n      borderColor: '#fff',\n      innerRadius: 30,\n      duration: 6000,\n      backgroundColor: 'transparent',\n      textAngle: 'horizontal',\n      knobSource: require('./assets/images/knob.png'),\n      onRef: ref => (this.child = ref),\n    };\n    return (\n      <View style={styles.container}>\n        <ImageBackground\n          source={{ uri: 'https://cdn4.vectorstock.com/i/1000x1000/18/08/fireworks-background-for-diwali-festival-vector-14301808.jpg' }}\n          style={[styles.fixed, styles.containter2]}>\n\n          <View style={styles.inputLayer}>\n            <Text style={styles.inputFieldStyle}>FACEBOOK ID</Text>\n            <Text style={styles.inputFieldStyle}>NANDY AKSHARA</Text>\n\n          </View>\n          <View style={styles.spinTitle}>\n            {!this.state.started && (\n              <View style={styles.startButtonView}>\n                <TouchableOpacity\n                  onPress={() => this.buttonPress()}\n                  style={styles.startButton}>\n                  <Text style={styles.startButtonText}>Spin to win!</Text>\n                </TouchableOpacity>\n              </View>\n            )}\n            {this.state.winnerIndex != null && (\n              <View style={styles.winnerView}>\n                <Text style={styles.winnerText}>\n                  You win {participants[this.state.winnerIndex]}\n                </Text>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.setState({ winnerIndex: null });\n                    this.child._tryAgain();\n                  }}\n                  style={styles.tryAgainButton}>\n                  <Text style={styles.tryAgainText}>TRY AGAIN</Text>\n                </TouchableOpacity>\n\n              </View>\n            )}\n\n          </View>\n          <ScrollView>\n            <View style={styles.wheelOfFortune}>\n\n\n              <WheelOfFortune\n                options={wheelOptions}\n                getWinner={(value, index) => {\n                  this.setState({ winnerValue: value, winnerIndex: index });\n                }}\n              />\n\n            </View>\n          </ScrollView>\n          <PostOutlook />\n          <FacebookShareButton\n            url={\"http://www.camperstribe.com\"}\n            quote={\"@Poorliya - Mobile World is yours to explore\"}\n            hashtag=\"#Poorliya\">\n\n            <FacebookIcon size={36} />\n          </FacebookShareButton>\n        </ImageBackground>\n      </View>\n    );\n  }\n}\nexport default App;\n\nconst styles = StyleSheet.create({\n  wheelOfFortune: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  startButtonView: {\n    position: 'absolute',\n  },\n  startButton: {\n    backgroundColor: 'rgba(0,0,0,.5)',\n    marginTop: 50,\n    padding: 5,\n  },\n  startButtonText: {\n    fontSize: 50,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  winnerView: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // tryAgainButton: {\n  //  padding: 10,\n  // },\n  winnerText: {\n    fontSize: 30,\n  },\n  tryAgainButton: {\n    padding: 5,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  tryAgainText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  inputLayer: {\n    flex: 0.2,\n    flexDirection: 'row',\n    marginTop: 120\n  },\n  container: {\n    flex: 1,\n    backgroundColor: '#E74C3C'\n  },\n  spinTitle: {\n    flex: 0.2,\n    flexDirection: 'row',\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    width: 300,\n    height: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1.5rem'\n  },\n  containter2: {\n    width: Dimensions.get(\"window\").width, //for full screen\n    height: Dimensions.get(\"window\").height //for full screen\n  },\n  fixed: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  inputFieldStyle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/knob.8a98d16f.png\";"],"sourceRoot":""}