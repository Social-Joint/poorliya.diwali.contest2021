{"version":3,"sources":["assets/images/knob.png","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["participants","App","props","buttonPress","setState","started","child","_onPress","state","winnerValue","winnerIndex","require","View","style","styles","container","ImageBackground","source","uri","fixed","containter2","inputLayer","Text","inputFieldStyle","spinTitle","this","startButtonView","TouchableOpacity","onPress","startButton","startButtonText","winnerView","winnerText","_tryAgain","tryAgainButton","tryAgainText","ScrollView","wheelOfFortune","FacebookShareButton","url","quote","hashtag","FacebookIcon","size","Component","StyleSheet","create","alignItems","justifyContent","position","backgroundColor","marginTop","padding","fontSize","color","fontWeight","flex","flexDirection","image","width","height","Dimensions","get","top","left","right","bottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.903a37ec.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/knob.8a98d16f.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity, Dimensions,ImageBackground, ScrollView\n} from 'react-native';\nimport { FacebookShareButton, FacebookIcon } from \"react-share\";\nimport WheelOfFortune from './Components/WheelOfFortune';\nconst participants = [\n  '10% Discount',\n  '50% Discount on Accessories',\n  '5.1 Home Theatre',\n  'NeckBand',\n  'None',\n  'SmartBand',\n  'HeadSet',\n  'BackCase',\n  'None',\n\n];\n\nclass App extends Component  {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      winnerValue: null,\n      winnerIndex: null,\n      started: false,\n    };\n    this.child = null;\n  }\n\n  buttonPress = () => {\n    this.setState({\n      started: true,\n    });\n    this.child._onPress();\n  };\n  render(){\n  const wheelOptions = {\n  rewards: participants,\n  knobSize: 30,\n  borderWidth: 5,\n  borderColor: '#fff',\n  innerRadius: 30,\n  duration: 6000,\n  backgroundColor: 'transparent',\n  textAngle: 'horizontal',\n  knobSource: require('./assets/images/knob.png'),\n  onRef: ref => (this.child = ref),\n};\n  return (\n    <View style={styles.container}>\n           <ImageBackground \n              source={{uri:'https://cdn4.vectorstock.com/i/1000x1000/18/08/fireworks-background-for-diwali-festival-vector-14301808.jpg'}} \n              style={[styles.fixed, styles.containter2]}>  \n     \n      <View style={styles.inputLayer}>\n            <Text style={styles.inputFieldStyle}>FACEBOOK ID</Text>\n            <Text style={styles.inputFieldStyle}>NANDY AKSHARA</Text>\n\n          </View>\n          <View style={styles.spinTitle}>\n            {!this.state.started && (\n              <View style={styles.startButtonView}>\n                 <TouchableOpacity\n                  onPress={() => this.buttonPress()}\n                  style={styles.startButton}>\n                  <Text style={styles.startButtonText}>Spin to win!</Text>\n                </TouchableOpacity> \n              </View>\n            )}\n            {this.state.winnerIndex != null && (\n              <View style={styles.winnerView}>\n                <Text style={styles.winnerText}>\n                  You win {participants[this.state.winnerIndex]}\n                </Text>\n                <TouchableOpacity\n                  onPress={() => {\n                    this.setState({ winnerIndex: null });\n                    this.child._tryAgain();\n                  }}\n                  style={styles.tryAgainButton}>\n                  <Text style={styles.tryAgainText}>TRY AGAIN</Text>\n                </TouchableOpacity> \n\n              </View>\n            )}\n\n          </View>\n          <ScrollView>\n            <View style={styles.wheelOfFortune}>\n\n\n              {/* <WheelOfFortune\n                options={wheelOptions}\n                getWinner={(value, index) => {\n                  this.setState({ winnerValue: value, winnerIndex: index });\n                }}\n              /> */}\n\n            </View>\n          </ScrollView>\n          <FacebookShareButton\n            url={\"http://www.camperstribe.com\"}\n            quote={\"@Poorliya - Mobile World is yours to explore\"}\n            hashtag=\"#Poorliya\">\n\n            <FacebookIcon size={36} />\n          </FacebookShareButton>\n</ImageBackground>\n</View> \n  );\n}\n  \n}\n\nexport default App;\nconst styles = StyleSheet.create({\n  wheelOfFortune: {\n    alignItems: 'center',\n   justifyContent: 'center',\n  },\n  startButtonView: {\n   position: 'absolute',\n  },\n  startButton: {\n    backgroundColor: 'rgba(0,0,0,.5)',\n    marginTop: 50,\n    padding: 5,\n  },\n  startButtonText: {\n    fontSize: 50,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  winnerView: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // tryAgainButton: {\n  //  padding: 10,\n  // },\n  winnerText: {\n    fontSize: 30,\n  },\n  tryAgainButton: {\n    padding: 5,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  tryAgainText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  inputLayer:{\n    flex:0.2,\n    flexDirection:'row',\nmarginTop:120\n  },\n  container:{\nflex:1,\nbackgroundColor: '#E74C3C'\n  },\n  spinTitle:{\n    flex:0.2,\n    flexDirection:'row',\npadding:20 ,\nalignItems: 'center',\njustifyContent: 'center',\n  },\n  image: {\n    width: 300,\n    height: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1.5rem'\n  },\n  containter2: {\n    width: Dimensions.get(\"window\").width, //for full screen\n    height: Dimensions.get(\"window\").height //for full screen\n  },\n  fixed: {\n   position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  inputFieldStyle:{\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n    flex:1,\njustifyContent:\"center\" \n }\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}