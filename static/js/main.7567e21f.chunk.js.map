{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","buttonPress","setState","started","child","_onPress","state","winnerValue","winnerIndex","Component","reportWebVitals","StyleSheet","create","wheelOfFortune","alignItems","justifyContent","startButtonView","position","startButton","backgroundColor","marginTop","padding","startButtonText","fontSize","color","fontWeight","winnerView","winnerText","tryAgainButton","tryAgainText","inputLayer","flex","flexDirection","container","spinTitle","image","width","height","containter2","Dimensions","get","fixed","top","left","right","bottom","inputFieldStyle","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAAe,I,4BCkDAA,E,kDA5Bb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURC,YAAc,WACZ,EAAKC,SAAS,CACZC,SAAS,IAEX,EAAKC,MAAMC,YAZX,EAAKC,MAAQ,CACXC,YAAa,KACbC,YAAa,KACbL,SAAS,GAEX,EAAKC,MAAQ,KARI,E,0CAiBnB,WAEA,OACD,4B,GArBiBK,aCTHC,GDuCAC,IAAWC,OAAO,CAC/BC,eAAgB,CACdC,WAAY,SACbC,eAAgB,UAEjBC,gBAAiB,CAChBC,SAAU,YAEXC,YAAa,CACXC,gBAAiB,iBACjBC,UAAW,GACXC,QAAS,GAEXC,gBAAiB,CACfC,SAAU,GACVC,MAAO,OACPC,WAAY,QAEdC,WAAY,CACVT,SAAU,WACVF,eAAgB,SAChBD,WAAY,UAKda,WAAY,CACVJ,SAAU,IAEZK,eAAgB,CACdP,QAAS,EACTF,gBAAiB,mBAEnBU,aAAc,CACZN,SAAU,GACVE,WAAY,OACZD,MAAO,QAETM,WAAW,CACTC,KAAK,GACLC,cAAc,MAClBZ,UAAU,KAERa,UAAU,CACZF,KAAK,EACLZ,gBAAiB,WAEfe,UAAU,CACRH,KAAK,GACLC,cAAc,MAClBX,QAAQ,GACRP,WAAY,SACZC,eAAgB,UAEdoB,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRtB,eAAgB,SAChBD,WAAY,SACZM,UAAW,UAEbkB,YAAa,CACXF,MAAOG,IAAWC,IAAI,UAAUJ,MAChCC,OAAQE,IAAWC,IAAI,UAAUH,QAEnCI,MAAO,CACNxB,SAAU,WACTyB,IAAK,EACLC,KAAM,EACNC,MAAO,EACPC,OAAQ,GAEVC,gBAAgB,CACdvB,SAAU,GACVE,WAAY,OACZD,MAAO,OACPO,KAAK,EACThB,eAAe,YChIS,SAAAgC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BjD,M","file":"static/js/main.7567e21f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, {Component} from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity, Dimensions,ImageBackground, ScrollView\n} from 'react-native';\n// const wheelOptions = {\n//   rewards: participants,\n//   knobSize: 30,\n//   borderWidth: 5,\n//   borderColor: '#fff',\n//   innerRadius: 30,\n//   duration: 6000,\n//   backgroundColor: 'transparent',\n//   textAngle: 'horizontal',\n//   knobSource: require('./assets/images/knob.png'),\n//   onRef: ref => (this.child = ref),\n// };\nclass App extends Component  {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      winnerValue: null,\n      winnerIndex: null,\n      started: false,\n    };\n    this.child = null;\n  }\n\n  buttonPress = () => {\n    this.setState({\n      started: true,\n    });\n    this.child._onPress();\n  };\n  render(){\n  \n  return (\n <div>\n\n </div>\n  );\n}\n  \n}\n\nexport default App;\nconst styles = StyleSheet.create({\n  wheelOfFortune: {\n    alignItems: 'center',\n   justifyContent: 'center',\n  },\n  startButtonView: {\n   position: 'absolute',\n  },\n  startButton: {\n    backgroundColor: 'rgba(0,0,0,.5)',\n    marginTop: 50,\n    padding: 5,\n  },\n  startButtonText: {\n    fontSize: 50,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  winnerView: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // tryAgainButton: {\n  //  padding: 10,\n  // },\n  winnerText: {\n    fontSize: 30,\n  },\n  tryAgainButton: {\n    padding: 5,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  tryAgainText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  inputLayer:{\n    flex:0.2,\n    flexDirection:'row',\nmarginTop:120\n  },\n  container:{\nflex:1,\nbackgroundColor: '#E74C3C'\n  },\n  spinTitle:{\n    flex:0.2,\n    flexDirection:'row',\npadding:20 ,\nalignItems: 'center',\njustifyContent: 'center',\n  },\n  image: {\n    width: 300,\n    height: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1.5rem'\n  },\n  containter2: {\n    width: Dimensions.get(\"window\").width, //for full screen\n    height: Dimensions.get(\"window\").height //for full screen\n  },\n  fixed: {\n   position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  inputFieldStyle:{\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n    flex:1,\njustifyContent:\"center\" \n }\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}