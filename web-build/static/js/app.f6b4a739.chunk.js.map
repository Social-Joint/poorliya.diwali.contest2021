{"version":3,"sources":["webpack:///./src/index.css?ec7a","src/index.css","src/logo.svg","webpack:///./src/App.css?1de9","src/App.css","src/assets/images/header.jpg","src/Components/WheelOfFortune.js","src/Constant.js","src/App.js","src/reportWebVitals.js","src/index.js","src/assets/images/knob.png"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","AnimatedSvg","Animated","createAnimatedComponent","Svg","Dimensions","get","width","height","WheelOfFortune","props","prepareWheel","Rewards","rewards","RewardCount","length","numberOfSegments","fontSize","onedeg","angleBySegment","angleOffset","winner","Math","floor","random","_wheelPaths","makeWheel","_angle","Value","onRef","resetWheelState","setState","enabled","started","finished","gameScreen","wheelOpacity","imageLeft","imageTop","angleListener","state","data","Array","from","fill","arcs","d3Shape","colors","map","arc","index","instance","padAngle","outerRadius","innerRadius","path","color","value","centroid","_getWinnerIndex","deg","abs","round","angle","_onPress","duration","timing","toValue","useNativeDriver","start","winnerIndex","getWinner","_textRender","x","y","number","textColor","textAnchor","fontWeight","_","j","textAngle","dy","key","charAt","rotation","origin","x1","y1","x2","y2","stroke","_renderSvgWheel","View","style","styles","container","_renderKnob","alignItems","justifyContent","transform","rotate","interpolate","inputRange","outputRange","backgroundColor","borderRadius","borderWidth","borderColor","opacity","viewBox","margin","toString","d","strokeWidth","knobSize","YOLO","modulo","divide","subtract","zIndex","translateY","Image","source","knobSource","require","console","log","this","undefined","TouchableOpacity","onPress","playButton","position","padding","_renderTopToPlay","Component","StyleSheet","create","flex","startText","textShadowColor","textShadowOffset","textShadowRadius","AvailablePrizes","Prizes","getPrizesName","prizeNameDetail","prize","name","App","buttonPress","child","winnerValue","spinResult","sharedialog","count","wheelOptions","ref","alignSelf","FlatList","renderItem","item","Text","keyExtractor","animationType","transparent","visible","flexDirection","bottom","FacebookShareButton","beforeOnClick","onClick","onShareWindowClose","prizeName","JSON","stringify","filter","children","windowPosition","url","quote","hashtag","FacebookShareCount","className","FacebookIcon","size","bgStyle","ImageBackground","uri","containter2","spinTitle","startButtonView","startButton","startButtonText","wheelOfFortune","marginTop","winnerView","winnerText","tryAgainButton","tryAgainText","inputLayer","image","fixed","top","left","right","inputFieldStyle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/app.f6b4a739.chunk.js","sourcesContent":["var api = require(\"!C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","var api = require(\"!C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\style-loader\\\\dist\\\\runtime\\\\injectStylesIntoStyleTag.js\");\n            var content = require(\"!!C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"C:\\\\Users\\\\SRI\\\\AppData\\\\Roaming\\\\nvm\\\\v14.17.6\\\\node_modules\\\\expo-cli\\\\node_modules\\\\css-loader\\\\dist\\\\runtime\\\\api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".App {\\n  text-align: center;\\n}\\n\\n.App-logo {\\n  height: 40vmin;\\n  pointer-events: none;\\n}\\n\\n@media (prefers-reduced-motion: no-preference) {\\n  .App-logo {\\n    animation: App-logo-spin infinite 20s linear;\\n  }\\n}\\n\\n.App-header {\\n  background-color: #282c34;\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: calc(10px + 2vmin);\\n  color: white;\\n}\\n\\n.App-link {\\n  color: #61dafb;\\n}\\n\\n@keyframes App-logo-spin {\\n  from {\\n    transform: rotate(0deg);\\n  }\\n  to {\\n    transform: rotate(360deg);\\n  }\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"static/media/header.77313556.jpg\";","import React, {Component} from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Animated,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport * as d3Shape from 'd3-shape';\r\n\r\nimport Svg, {G, Text, TSpan, Path, Pattern , Rect,Line\r\n} from 'react-native-svg';\r\n\r\nconst AnimatedSvg = Animated.createAnimatedComponent(Svg);\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\nclass WheelOfFortune extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"** get ref \",this.props.options)\r\n    this.state = {\r\n      enabled: false,\r\n      started: false,\r\n      finished: false,\r\n      winner: null,\r\n      gameScreen: new Animated.Value(height / 2),\r\n      wheelOpacity: new Animated.Value(1),\r\n      imageLeft: new Animated.Value(width / 2 - 30),\r\n      imageTop: new Animated.Value(height / 2 - 70),\r\n    };\r\n    this.angle = 0;\r\n\r\n    this.prepareWheel();\r\n  }\r\n\r\n  prepareWheel = () => {\r\n    this.Rewards = this.props.options.rewards;\r\n    this.RewardCount = this.Rewards.length;\r\n\r\n    this.numberOfSegments = this.RewardCount;\r\n    this.fontSize = 32;\r\n    this.onedeg = 360;\r\n    this.angleBySegment = this.onedeg / this.numberOfSegments;\r\n    this.angleOffset = this.angleBySegment / 2;\r\n    this.winner = this.props.options.winner\r\n      ? this.props.options.winner\r\n      : Math.floor(Math.random() * this.numberOfSegments);\r\n\r\n    this._wheelPaths = this.makeWheel();\r\n    this._angle = new Animated.Value(0);\r\n\r\n    this.props.onRef(this);\r\n  };\r\n\r\n  resetWheelState = () => {\r\n    this.setState({\r\n      enabled: false,\r\n      started: false,\r\n      finished: false,\r\n      winner: null,\r\n      gameScreen:new Animated.Value(height / 2),\r\n      wheelOpacity: new Animated.Value(1),\r\n      imageLeft: new Animated.Value(width / 2 - 30),\r\n      imageTop: new Animated.Value(height / 2 - 70),\r\n    });\r\n  };\r\n\r\n\r\n  angleListener = () => {\r\n    // this._angle.addListener(event => {\r\n      if (this.state.enabled) {\r\n        this.setState({\r\n          enabled: false,\r\n          finished: false,\r\n        });\r\n      } \r\n    //   this.angle = event.value;\r\n    // });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.angleListener();\r\n  }\r\n\r\n  makeWheel = () => {\r\n    const data = Array.from({length: this.numberOfSegments}).fill(1);\r\n    const arcs = d3Shape.pie()(data);\r\n    var colors = this.props.options.colors\r\n      ? this.props.options.colors\r\n      : [\r\n          '#E07026',\r\n          '#E8C22E',\r\n          '#ABC937',\r\n          '#4F991D',\r\n          '#22AFD3',\r\n          '#5858D0',\r\n          '#7B48C8',\r\n          '#D843B9',\r\n          '#E23B80',\r\n          '#D82B2B',\r\n        ];\r\n    return arcs.map((arc, index) => {\r\n      const instance = d3Shape\r\n        .arc()\r\n        .padAngle(0.001)\r\n        .outerRadius(width / 2)\r\n        .innerRadius(this.props.options.innerRadius || 100);\r\n      return {\r\n        path: instance(arc),\r\n        color: colors[index % colors.length],\r\n        value: this.Rewards[index],\r\n        centroid: instance.centroid(arc),\r\n      };\r\n    });\r\n  };\r\n\r\n  _getWinnerIndex = () => {\r\n    const deg = Math.abs(Math.round(this.angle % this.onedeg));\r\n    // wheel deging counterclockwise\r\n    if (this.angle < 0) {\r\n      return Math.floor(deg / this.angleBySegment);\r\n    }\r\n    // wheel deging clockwise\r\n    return (\r\n      (this.numberOfSegments - Math.floor(deg / this.angleBySegment)) %\r\n      this.numberOfSegments\r\n    );\r\n  };\r\n\r\n  _onPress = () => {\r\n    const duration = this.props.options.duration || 10000;\r\n\r\n    this.setState({\r\n      started: true,\r\n    });\r\n    Animated.timing(this._angle, {\r\n      toValue:\r\n        365 -\r\n        this.winner * (this.onedeg / this.numberOfSegments) +\r\n        360 * (duration / 1000),\r\n      duration: duration,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      const winnerIndex = this._getWinnerIndex();\r\n      this.setState({\r\n        finished: true,\r\n        winner: this._wheelPaths[winnerIndex].value,\r\n      });\r\n      this.props.getWinner(this._wheelPaths[winnerIndex].value, winnerIndex);\r\n    });\r\n  };\r\n\r\n  _textRender = (x, y, number, i) => (\r\n    <Text\r\n      x={x - number.length * 5}\r\n      y={y - 80}\r\n      fill={\r\n        this.props.options.textColor ? this.props.options.textColor : '#fff'\r\n      }\r\n      textAnchor=\"c\"\r\n      fontSize={42}\r\n      fontWeight=\"bold\"\r\n      >\r\n      {Array.from({length: number.length}).map((_, j) => {\r\n        // Render reward text vertically\r\n        if (this.props.options.textAngle === 'vertical') {\r\n          return (\r\n            <TSpan x={x} dy={this.fontSize} key={`arc-${i}-slice-${j}`}>\r\n              {number.charAt(j)}\r\n            </TSpan>\r\n          );\r\n        }\r\n        // Render reward text horizontally\r\n        else {\r\n          return (\r\n            // <TSpan\r\n            //   y={y - 40}\r\n            //   dx={this.fontSize * 0.07}\r\n            //   key={`arc-${i}-slice-${j}`}>\r\n            //   {number.charAt(j)}\r\n            // </TSpan>\r\n            \r\n            <Svg height=\"100\" width=\"200\">\r\n  <G rotation=\"50\" origin=\"100, 50\">\r\n    <Line x1=\"60\" y1=\"10\" x2=\"140\" y2=\"10\" stroke=\"#060\" />\r\n\r\n    <Rect x=\"60\" y=\"20\" height=\"50\" width=\"80\" stroke=\"#060\" fill=\"#060\" />\r\n\r\n    <Text x=\"100\" y=\"75\" stroke=\"#600\" fill=\"#600\" textAnchor=\"middle\">\r\n      Text grouped with shapes\r\n    </Text>\r\n  </G>\r\n</Svg>\r\n          );\r\n        }\r\n      })}\r\n    </Text>\r\n  );\r\n\r\n  _renderSvgWheel = () => {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this._renderKnob()}\r\n        <Animated.View\r\n          style={{\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transform: [\r\n              {\r\n                rotate: this._angle.interpolate({\r\n                  inputRange: [-this.onedeg, 0, this.onedeg],\r\n                  outputRange: [\r\n                    `-${this.onedeg}deg`,\r\n                    `0deg`,\r\n                    `${this.onedeg}deg`,\r\n                  ],\r\n                }),\r\n              },\r\n            ],\r\n            backgroundColor: this.props.options.backgroundColor\r\n              ? this.props.options.backgroundColor\r\n              : '#fff',\r\n            width: height/2,\r\n            height:height/2,\r\n            borderRadius: (width - 20) / 2,\r\n            borderWidth: this.props.options.borderWidth\r\n              ? this.props.options.borderWidth\r\n              : 2,\r\n            borderColor: this.props.options.borderColor\r\n              ? this.props.options.borderColor\r\n              : '#fff',\r\n            opacity: this.state.wheelOpacity,\r\n          }}>\r\n          <AnimatedSvg\r\n            width={this.state.gameScreen}\r\n            height={this.state.gameScreen}\r\n            viewBox={`0 0 ${width} ${width}`}\r\n            style={{\r\n              transform: [{rotate: `-${this.angleOffset}deg`}],\r\n              margin: 10,\r\n            }}>\r\n            <G y={width / 2} x={width / 2}>\r\n              {this._wheelPaths.map((arc, i) => {\r\n                const [x, y] = arc.centroid;\r\n                const number = arc.value.toString();\r\n\r\n                return (\r\n                  <G key={`arc-${i}`}>\r\n                    <Path d={arc.path} strokeWidth={2} fill={arc.color} />\r\n                    <G\r\n                      rotation={\r\n                        (i * this.onedeg) / this.numberOfSegments +\r\n                        this.angleOffset\r\n                      }\r\n                      origin={`${x}, ${y}`}>\r\n                      {this._textRender(x, y, number, i)}\r\n                    </G>\r\n                  </G>\r\n                );\r\n              })}\r\n            </G>\r\n          </AnimatedSvg>\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  _renderKnob = () => {\r\n    const knobSize = this.props.options.knobSize\r\n      ? this.props.options.knobSize\r\n      : 20;\r\n    // [0, this.numberOfSegments]\r\n    const YOLO = Animated.modulo(\r\n      Animated.divide(\r\n        Animated.modulo(\r\n          Animated.subtract(this._angle, this.angleOffset),\r\n          this.onedeg,\r\n        ),\r\n        new Animated.Value(this.angleBySegment),\r\n      ),\r\n      1,\r\n    );\r\n\r\n    return (\r\n      <Animated.View\r\n        style={{\r\n          width: knobSize,\r\n          height: knobSize * 2,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n          opacity: this.state.wheelOpacity,\r\n          transform: [\r\n            {\r\n              rotate: YOLO.interpolate({\r\n                inputRange: [-1, -0.5, -0.0001, 0.0001, 0.5, 1],\r\n                outputRange: [\r\n                  '0deg',\r\n                  '0deg',\r\n                  '35deg',\r\n                  '-35deg',\r\n                  '0deg',\r\n                  '0deg',\r\n                ],\r\n              }),\r\n            },\r\n          ],\r\n        }}>\r\n        <Svg\r\n          width={knobSize}\r\n          height={(knobSize * 100) / 57}\r\n          viewBox={`0 0 57 100`}\r\n          style={{\r\n            transform: [{translateY: 8}],\r\n          }}>\r\n          <Image\r\n            source={\r\n              this.props.options.knobSource\r\n                ? this.props.options.knobSource\r\n                : require('../assets/images/knob.png')\r\n            }\r\n            style={{ width: knobSize, height: (knobSize * 100) / 57 }}\r\n          />\r\n        </Svg>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  _renderTopToPlay() {\r\n    if (this.state.started == false) {\r\n      return (\r\n        <TouchableOpacity\r\n         onPress={() => this._onPress()}\r\n         >\r\n          {this.props.options.playButton()}\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity\r\n          style={{\r\n            position: 'absolute',\r\n            width: width,\r\n            height: height / 2,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}>\r\n          <Animated.View style={[styles.content, {padding: 10}]}>\r\n            {this._renderSvgWheel()}\r\n          </Animated.View>\r\n        </TouchableOpacity>\r\n        {this.props.options.playButton ? this._renderTopToPlay() : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WheelOfFortune;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n   \r\n  },\r\n  content: {},\r\n  startText: {\r\n    fontSize: 50,\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    textShadowColor: 'rgba(0, 0, 0, 0.4)',\r\n    textShadowOffset: {width: -1, height: 1},\r\n    textShadowRadius: 10,\r\n  },\r\n});\r\n","import { Component } from \"react\"\r\n\r\nexport const AvailablePrizes = [\r\n    { \"name\": \"10% Discount\", \"count\": 25 },\r\n    { \"name\": \"50% Discount on Accessories\", \"count\": 20 },\r\n    { \"name\": \"5.1 Home Theatre\", \"count\": 1 },\r\n    { \"name\": \"NeckBand\", \"count\": 5 },\r\n    { \"name\": \"SmartBand\", \"count\": 7 },\r\n    { \"name\": \"HeadSet\", \"count\": 10 },\r\n    { \"name\": \"BackCase\", \"count\": 15 },\r\n    { \"name\": \"MI powerBank\", \"count\": 3 },\r\n    { \"name\": \"None\" },\r\n]\r\n\r\nexport const Prizes = getPrizesName()\r\nfunction getPrizesName(){\r\n    var prizeNameDetail = []\r\n    AvailablePrizes.map(prize => {\r\n        prizeNameDetail.push(prize.name)\r\n})\r\n    return prizeNameDetail\r\n}\r\nexport const currentPrizes = getPrizesName()\r\n\r\nexport function updatePrizeList(prizeName){\r\n    console.log(\"before updatePrizeList \"+JSON.stringify(AvailablePrizes))\r\n    AvailablePrizes.filter(x=>{\r\n     if(x.name == prizeName) {\r\n         x.count =x.count-1;\r\n     }  \r\n    })  \r\n    console.log(\"after updatePrizeList \"+JSON.stringify(AvailablePrizes))\r\nreturn AvailablePrizes\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport {\n  Image,\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity, Dimensions, ImageBackground, ScrollView,FlatList\n} from 'react-native';\nimport { FacebookShareButton, FacebookIcon, FacebookShareCount } from \"react-share\";\nimport Modal from 'modal-react-native-web';\nimport imageSource from './assets/images/header.jpg'\nimport WheelOfFortune from './Components/WheelOfFortune';\nimport { Button } from 'react-native-web';\nimport { Prizes,AvailablePrizes,updatePrizeList } from './Constant.js';\n// import ConfettiCannon from 'react-native-confetti-cannon';\nimport Storage from 'react-native-storage';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      winnerValue: null,\n      winnerIndex: null,\n      started: false,\n      spinResult: false,\n      sharedialog: false,\n\n    };\n    this.child = null;\n  }\n\n  buttonPress = () => {\n    this.setState({\n      started: true,\n    });\n    this.child._onPress();\n  };\n  getChildern() {\n    return (\n      <div>\n        <h>dfhsjakl:</h>\n      </div>\n    )\n  }\n  renderShareCount(count) {\n    console.log(\"get count \" + count)\n  }\n  render() {\n    console.log(\"*** get prize \" + Prizes[this.state.winnerIndex])\n    const wheelOptions = {\n      rewards: Prizes,\n      knobSize: 30,\n      borderWidth: 5,\n      borderColor: '#fff',\n      innerRadius: 30,\n      duration: 6000,\n      backgroundColor: 'transparent',\n      textAngle: 'horizontal',\n      knobSource: require('./assets/images/knob.png'),\n      onRef: ref => (this.child = ref),\n    };\n    const renderItem = ({ item }) => {\n    \n      return (\n       <View>\n         <Text>Name {item.name}</Text>\n         <Text>Count {item.count}</Text>\n\n       </View>\n      );\n    };\n \n    return (\n      <View style={{ flex: 1 }}>\n        {/* <View style={{ minHeight: '50px' }}>\n          <Image\n            source={imageSource}\n            style={{ width: Dimensions.get(\"screen\").width, height: 50 }}\n          />\n        </View> */}\n\n        <View style={{ alignSelf: 'flex-end' }}>\n          <FlatList\n        data={AvailablePrizes}\n        renderItem={renderItem}\n        keyExtractor={item => item.name}\n      />\n        </View>\n        <Modal\n\n          animationType=\"fade\"\n          transparent={false}\n          visible={this.state.sharedialog}>\n          <View>\n\n            <Text style={{\n              fontSize: 50,\n              color: '#fff', backgroundColor: 'rgba(0,0,0,.5)', padding: 5, justifyContent: 'center', alignItems: \"center\",\n              fontWeight: 'bold', alignSelf: 'center'\n            }}>Thanks for your participation !!!</Text>\n\n\n          </View>\n\n        </Modal>\n\n\n        <Modal\n\n          animationType=\"fade\"\n          transparent={false}\n          visible={this.state.spinResult}>\n          <View style={{ flexDirection: 'column' }}>\n            <View style={{ backgroundColor: 'rgba(0,0,0,.5)', padding: 5 }}>\n\n              <Text style={{\n                fontSize: 50,\n                color: '#fff',\n                fontWeight: 'bold', alignSelf: 'center'\n              }}>Congratulations !!!</Text>\n\n            </View>\n\n            <View style={{}}>\n              <Text style={{ fontSize: 35 }}>  You have win {Prizes[this.state.winnerIndex]}</Text>\n              <Text style={{ fontSize: 35 }}>To claim this win ,share this post on FaceBook </Text>\n            </View>\n            <View style={{ bottom: 0, position: \"fixed\", flexDirection: 'row', alignSelf: 'center', padding: 10, justifyContent: 'space-evenly' }}>\n              <TouchableOpacity\n                onPress={() => {\n                  this.setState({ spinResult: false })\n                }}>\n                <Text style={{ fontSize: 25, fontWeight: 'bold', padding: 20 }}>Close</Text>\n              </TouchableOpacity>\n              <FacebookShareButton\n\n                beforeOnClick={(x) => console.log(\"beforeOnClick \" + x)}\n                onClick={() => { console.log(\"on click enevet \") }}\n                onShareWindowClose={() => { this.setState({ spinResult: false }, () => updatePrizeList(Prizes[this.state.winnerIndex]) ) }}\n             //   this.setState({ sharedialog: true })\n               \n                style={{ backgroundColor: 'red' }}\n                children={<Text>OMG</Text>}\n                windowPosition={'windowCenter'}\n                url={\"http://www.camperstribe.com\"}\n                quote={\"@Poorliya - Mobile World is yours to explore\"}\n                hashtag=\"#Poorliya\">\n                <FacebookShareCount url={\"http://www.camperstribe.com\"} className=\"Demo__some-network__share-count\">\n                  {count => count}\n                </FacebookShareCount>\n                <FacebookIcon size={36} bgStyle={{ color: \"blue\" }} />\n                {/* <button className=\"btn btn-sm btn-facebook\">\n                  <i className=\"fa fa-facebook\" /> <span>Share</span>\n                </button> */}\n              </FacebookShareButton>\n\n            </View>\n\n          </View>\n\n        </Modal>\n        <View style={{ backgroundColor: \"#000\" }}>\n          <ImageBackground\n            source={{ uri: 'https://cdn4.vectorstock.com/i/1000x1000/18/08/fireworks-background-for-diwali-festival-vector-14301808.jpg' }}\n            style={[styles.containter2]}>\n            <View style={styles.spinTitle}>\n              {!this.state.started && (\n                <View style={styles.startButtonView}>\n                  <TouchableOpacity\n                    onPress={() => this.buttonPress()}\n                    style={styles.startButton}>\n                    <Text style={styles.startButtonText}>Spin to win!</Text>\n                  </TouchableOpacity>\n                </View>\n              )}\n\n            </View>\n\n            <WheelOfFortune\n              onRef={ref => (this.child = ref)}\n              options={wheelOptions}\n              getWinner={(value, index) => {\n                this.setState({ winnerValue: value, winnerIndex: index, spinResult: true });\n              }}\n            />\n          </ImageBackground>\n        </View>\n      </View>\n     \n    );\n  }\n\n}\n\nexport default App;\nconst styles = StyleSheet.create({\n  wheelOfFortune: {\n    // alignItems: 'center',\n    // justifyContent: 'center',\n    backgroundColor: '#000',\n    flex: 1,\n\n  },\n  startButtonView: {\n    position: 'absolute',\n  },\n  startButton: {\n    backgroundColor: 'rgba(0,0,0,.5)',\n    marginTop: 50,\n    padding: 5,\n  },\n  startButtonText: {\n    fontSize: 50,\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  winnerView: {\n    position: 'absolute',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  // tryAgainButton: {\n  //  padding: 10,\n  // },\n  winnerText: {\n    fontSize: 30,\n  },\n  tryAgainButton: {\n    padding: 5,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n  },\n  tryAgainText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  inputLayer: {\n    flex: 0.2,\n    flexDirection: 'row',\n    marginTop: 120\n  },\n  container: {\n    flex: 1,\n    padding: 10\n  },\n  spinTitle: {\n    flex: 0.2,\n    flexDirection: 'row',\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  image: {\n    width: 300,\n    height: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: '1.5rem'\n  },\n  containter2: {\n    width: Dimensions.get(\"window\").width, //for full screen\n    height: Dimensions.get(\"window\").height //for full screen\n  },\n  fixed: {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  },\n  inputFieldStyle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#fff',\n    flex: 1,\n    justifyContent: \"center\"\n  }\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/knob.8a98d16f.png\";"],"sourceRoot":""}