{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Animated from\"react-native-web/dist/exports/Animated\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import*as d3Shape from'd3-shape';import Svg,{G,Text,TSpan,Path,Pattern,Rect,Line}from'react-native-svg';var AnimatedSvg=Animated.createAnimatedComponent(Svg);var _Dimensions$get=Dimensions.get('screen'),width=_Dimensions$get.width,height=_Dimensions$get.height;var WheelOfFortune=function(_Component){_inherits(WheelOfFortune,_Component);var _super=_createSuper(WheelOfFortune);function WheelOfFortune(props){var _this;_classCallCheck(this,WheelOfFortune);_this=_super.call(this,props);_this.prepareWheel=function(){_this.Rewards=_this.props.options.rewards;_this.RewardCount=_this.Rewards.length;_this.numberOfSegments=_this.RewardCount;_this.fontSize=32;_this.onedeg=360;_this.angleBySegment=_this.onedeg/_this.numberOfSegments;_this.angleOffset=_this.angleBySegment/2;_this.winner=_this.props.options.winner?_this.props.options.winner:Math.floor(Math.random()*_this.numberOfSegments);_this._wheelPaths=_this.makeWheel();_this._angle=new Animated.Value(0);_this.props.onRef(_assertThisInitialized(_this));};_this.resetWheelState=function(){_this.setState({enabled:false,started:false,finished:false,winner:null,gameScreen:new Animated.Value(height/2),wheelOpacity:new Animated.Value(1),imageLeft:new Animated.Value(width/2-30),imageTop:new Animated.Value(height/2-70)});};_this.angleListener=function(){if(_this.state.enabled){_this.setState({enabled:false,finished:false});}};_this.makeWheel=function(){var data=Array.from({length:_this.numberOfSegments}).fill(1);var arcs=d3Shape.pie()(data);var colors=_this.props.options.colors?_this.props.options.colors:['#E07026','#E8C22E','#ABC937','#4F991D','#22AFD3','#5858D0','#7B48C8','#D843B9','#E23B80','#D82B2B'];return arcs.map(function(arc,index){var instance=d3Shape.arc().padAngle(0.001).outerRadius(width/2).innerRadius(_this.props.options.innerRadius||100);return{path:instance(arc),color:colors[index%colors.length],value:_this.Rewards[index],centroid:instance.centroid(arc)};});};_this._getWinnerIndex=function(){var deg=Math.abs(Math.round(_this.angle%_this.onedeg));if(_this.angle<0){return Math.floor(deg/_this.angleBySegment);}return(_this.numberOfSegments-Math.floor(deg/_this.angleBySegment))%_this.numberOfSegments;};_this._onPress=function(){var duration=_this.props.options.duration||10000;_this.setState({started:true});Animated.timing(_this._angle,{toValue:365-_this.winner*(_this.onedeg/_this.numberOfSegments)+360*(duration/1000),duration:duration,useNativeDriver:true}).start(function(){var winnerIndex=_this._getWinnerIndex();_this.setState({finished:true,winner:_this._wheelPaths[winnerIndex].value});_this.props.getWinner(_this._wheelPaths[winnerIndex].value,winnerIndex);});};_this._textRender=function(x,y,number,i){return React.createElement(Text,{x:x-number.length*5,y:y-80,fill:_this.props.options.textColor?_this.props.options.textColor:'#fff',textAnchor:\"c\",fontSize:42,fontWeight:\"bold\"},Array.from({length:number.length}).map(function(_,j){if(_this.props.options.textAngle==='vertical'){return React.createElement(TSpan,{x:x,dy:_this.fontSize,key:\"arc-\"+i+\"-slice-\"+j},number.charAt(j));}else{return React.createElement(Svg,{height:\"100\",width:\"200\"},React.createElement(G,{rotation:\"50\",origin:\"100, 50\"},React.createElement(Line,{x1:\"60\",y1:\"10\",x2:\"140\",y2:\"10\",stroke:\"#060\"}),React.createElement(Rect,{x:\"60\",y:\"20\",height:\"50\",width:\"80\",stroke:\"#060\",fill:\"#060\"}),React.createElement(Text,{x:\"100\",y:\"75\",stroke:\"#600\",fill:\"#600\",textAnchor:\"middle\"},\"Text grouped with shapes\")));}}));};_this._renderSvgWheel=function(){return React.createElement(View,{style:styles.container},_this._renderKnob(),React.createElement(Animated.View,{style:{alignItems:'center',justifyContent:'center',transform:[{rotate:_this._angle.interpolate({inputRange:[-_this.onedeg,0,_this.onedeg],outputRange:[\"-\"+_this.onedeg+\"deg\",\"0deg\",_this.onedeg+\"deg\"]})}],backgroundColor:_this.props.options.backgroundColor?_this.props.options.backgroundColor:'#fff',width:height/2,height:height/2,borderRadius:(width-20)/2,borderWidth:_this.props.options.borderWidth?_this.props.options.borderWidth:2,borderColor:_this.props.options.borderColor?_this.props.options.borderColor:'#fff',opacity:_this.state.wheelOpacity}},React.createElement(AnimatedSvg,{width:_this.state.gameScreen,height:_this.state.gameScreen,viewBox:\"0 0 \"+width+\" \"+width,style:{transform:[{rotate:\"-\"+_this.angleOffset+\"deg\"}],margin:10}},React.createElement(G,{y:width/2,x:width/2},_this._wheelPaths.map(function(arc,i){var _arc$centroid=_slicedToArray(arc.centroid,2),x=_arc$centroid[0],y=_arc$centroid[1];var number=arc.value.toString();return React.createElement(G,{key:\"arc-\"+i},React.createElement(Path,{d:arc.path,strokeWidth:2,fill:arc.color}),React.createElement(G,{rotation:i*_this.onedeg/_this.numberOfSegments+_this.angleOffset,origin:x+\", \"+y},_this._textRender(x,y,number,i)));})))));};_this._renderKnob=function(){var knobSize=_this.props.options.knobSize?_this.props.options.knobSize:20;var YOLO=Animated.modulo(Animated.divide(Animated.modulo(Animated.subtract(_this._angle,_this.angleOffset),_this.onedeg),new Animated.Value(_this.angleBySegment)),1);return React.createElement(Animated.View,{style:{width:knobSize,height:knobSize*2,justifyContent:'flex-end',zIndex:1,opacity:_this.state.wheelOpacity,transform:[{rotate:YOLO.interpolate({inputRange:[-1,-0.5,-0.0001,0.0001,0.5,1],outputRange:['0deg','0deg','35deg','-35deg','0deg','0deg']})}]}},React.createElement(Svg,{width:knobSize,height:knobSize*100/57,viewBox:\"0 0 57 100\",style:{transform:[{translateY:8}]}},React.createElement(Image,{source:_this.props.options.knobSource?_this.props.options.knobSource:require(\"../assets/images/knob.png\"),style:{width:knobSize,height:knobSize*100/57}})));};console.log(\"** get ref \",_this.props.options);_this.state={enabled:false,started:false,finished:false,winner:null,gameScreen:new Animated.Value(height/2),wheelOpacity:new Animated.Value(1),imageLeft:new Animated.Value(width/2-30),imageTop:new Animated.Value(height/2-70)};_this.angle=0;_this.prepareWheel();return _this;}_createClass(WheelOfFortune,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.props.onRef(undefined);}},{key:\"componentDidMount\",value:function componentDidMount(){this.angleListener();}},{key:\"_renderTopToPlay\",value:function _renderTopToPlay(){var _this2=this;if(this.state.started==false){return React.createElement(TouchableOpacity,{onPress:function onPress(){return _this2._onPress();}},this.props.options.playButton());}}},{key:\"render\",value:function render(){return React.createElement(View,{style:styles.container},React.createElement(TouchableOpacity,{style:{position:'absolute',width:width,height:height/2,justifyContent:'center',alignItems:'center'}},React.createElement(Animated.View,{style:[styles.content,{padding:10}]},this._renderSvgWheel())),this.props.options.playButton?this._renderTopToPlay():null);}}]);return WheelOfFortune;}(Component);export default WheelOfFortune;var styles=StyleSheet.create({container:{flex:1,justifyContent:'center',alignItems:'center'},content:{},startText:{fontSize:50,color:'#fff',fontWeight:'bold',textShadowColor:'rgba(0, 0, 0, 0.4)',textShadowOffset:{width:-1,height:1},textShadowRadius:10}});","map":{"version":3,"sources":["D:/Poorliya/Spin_To_Win_Contest/spin_to_win/src/Components/WheelOfFortune.js"],"names":["React","Component","d3Shape","Svg","G","Text","TSpan","Path","Pattern","Rect","Line","AnimatedSvg","Animated","createAnimatedComponent","Dimensions","get","width","height","WheelOfFortune","props","prepareWheel","Rewards","options","rewards","RewardCount","length","numberOfSegments","fontSize","onedeg","angleBySegment","angleOffset","winner","Math","floor","random","_wheelPaths","makeWheel","_angle","Value","onRef","resetWheelState","setState","enabled","started","finished","gameScreen","wheelOpacity","imageLeft","imageTop","angleListener","state","data","Array","from","fill","arcs","pie","colors","map","arc","index","instance","padAngle","outerRadius","innerRadius","path","color","value","centroid","_getWinnerIndex","deg","abs","round","angle","_onPress","duration","timing","toValue","useNativeDriver","start","winnerIndex","getWinner","_textRender","x","y","number","i","textColor","_","j","textAngle","charAt","_renderSvgWheel","styles","container","_renderKnob","alignItems","justifyContent","transform","rotate","interpolate","inputRange","outputRange","backgroundColor","borderRadius","borderWidth","borderColor","opacity","margin","toString","knobSize","YOLO","modulo","divide","subtract","zIndex","translateY","knobSource","require","console","log","undefined","playButton","position","content","padding","_renderTopToPlay","StyleSheet","create","flex","startText","fontWeight","textShadowColor","textShadowOffset","textShadowRadius"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  Dimensions,\r\n  Animated,\r\n  TouchableOpacity,\r\n  Image,\r\n} from 'react-native';\r\nimport * as d3Shape from 'd3-shape';\r\n\r\nimport Svg, {G, Text, TSpan, Path, Pattern , Rect,Line\r\n} from 'react-native-svg';\r\n\r\nconst AnimatedSvg = Animated.createAnimatedComponent(Svg);\r\n\r\nconst {width, height} = Dimensions.get('screen');\r\n\r\nclass WheelOfFortune extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"** get ref \",this.props.options)\r\n    this.state = {\r\n      enabled: false,\r\n      started: false,\r\n      finished: false,\r\n      winner: null,\r\n      gameScreen: new Animated.Value(height / 2),\r\n      wheelOpacity: new Animated.Value(1),\r\n      imageLeft: new Animated.Value(width / 2 - 30),\r\n      imageTop: new Animated.Value(height / 2 - 70),\r\n    };\r\n    this.angle = 0;\r\n\r\n    this.prepareWheel();\r\n  }\r\n\r\n  prepareWheel = () => {\r\n    this.Rewards = this.props.options.rewards;\r\n    this.RewardCount = this.Rewards.length;\r\n\r\n    this.numberOfSegments = this.RewardCount;\r\n    this.fontSize = 32;\r\n    this.onedeg = 360;\r\n    this.angleBySegment = this.onedeg / this.numberOfSegments;\r\n    this.angleOffset = this.angleBySegment / 2;\r\n    this.winner = this.props.options.winner\r\n      ? this.props.options.winner\r\n      : Math.floor(Math.random() * this.numberOfSegments);\r\n\r\n    this._wheelPaths = this.makeWheel();\r\n    this._angle = new Animated.Value(0);\r\n\r\n    this.props.onRef(this);\r\n  };\r\n\r\n  resetWheelState = () => {\r\n    this.setState({\r\n      enabled: false,\r\n      started: false,\r\n      finished: false,\r\n      winner: null,\r\n      gameScreen:new Animated.Value(height / 2),\r\n      wheelOpacity: new Animated.Value(1),\r\n      imageLeft: new Animated.Value(width / 2 - 30),\r\n      imageTop: new Animated.Value(height / 2 - 70),\r\n    });\r\n  };\r\n\r\n\r\n  angleListener = () => {\r\n    // this._angle.addListener(event => {\r\n      if (this.state.enabled) {\r\n        this.setState({\r\n          enabled: false,\r\n          finished: false,\r\n        });\r\n      } \r\n    //   this.angle = event.value;\r\n    // });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.onRef(undefined);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.angleListener();\r\n  }\r\n\r\n  makeWheel = () => {\r\n    const data = Array.from({length: this.numberOfSegments}).fill(1);\r\n    const arcs = d3Shape.pie()(data);\r\n    var colors = this.props.options.colors\r\n      ? this.props.options.colors\r\n      : [\r\n          '#E07026',\r\n          '#E8C22E',\r\n          '#ABC937',\r\n          '#4F991D',\r\n          '#22AFD3',\r\n          '#5858D0',\r\n          '#7B48C8',\r\n          '#D843B9',\r\n          '#E23B80',\r\n          '#D82B2B',\r\n        ];\r\n    return arcs.map((arc, index) => {\r\n      const instance = d3Shape\r\n        .arc()\r\n        .padAngle(0.001)\r\n        .outerRadius(width / 2)\r\n        .innerRadius(this.props.options.innerRadius || 100);\r\n      return {\r\n        path: instance(arc),\r\n        color: colors[index % colors.length],\r\n        value: this.Rewards[index],\r\n        centroid: instance.centroid(arc),\r\n      };\r\n    });\r\n  };\r\n\r\n  _getWinnerIndex = () => {\r\n    const deg = Math.abs(Math.round(this.angle % this.onedeg));\r\n    // wheel deging counterclockwise\r\n    if (this.angle < 0) {\r\n      return Math.floor(deg / this.angleBySegment);\r\n    }\r\n    // wheel deging clockwise\r\n    return (\r\n      (this.numberOfSegments - Math.floor(deg / this.angleBySegment)) %\r\n      this.numberOfSegments\r\n    );\r\n  };\r\n\r\n  _onPress = () => {\r\n    const duration = this.props.options.duration || 10000;\r\n\r\n    this.setState({\r\n      started: true,\r\n    });\r\n    Animated.timing(this._angle, {\r\n      toValue:\r\n        365 -\r\n        this.winner * (this.onedeg / this.numberOfSegments) +\r\n        360 * (duration / 1000),\r\n      duration: duration,\r\n      useNativeDriver: true,\r\n    }).start(() => {\r\n      const winnerIndex = this._getWinnerIndex();\r\n      this.setState({\r\n        finished: true,\r\n        winner: this._wheelPaths[winnerIndex].value,\r\n      });\r\n      this.props.getWinner(this._wheelPaths[winnerIndex].value, winnerIndex);\r\n    });\r\n  };\r\n\r\n  _textRender = (x, y, number, i) => (\r\n    <Text\r\n      x={x - number.length * 5}\r\n      y={y - 80}\r\n      fill={\r\n        this.props.options.textColor ? this.props.options.textColor : '#fff'\r\n      }\r\n      textAnchor=\"c\"\r\n      fontSize={42}\r\n      fontWeight=\"bold\"\r\n      >\r\n      {Array.from({length: number.length}).map((_, j) => {\r\n        // Render reward text vertically\r\n        if (this.props.options.textAngle === 'vertical') {\r\n          return (\r\n            <TSpan x={x} dy={this.fontSize} key={`arc-${i}-slice-${j}`}>\r\n              {number.charAt(j)}\r\n            </TSpan>\r\n          );\r\n        }\r\n        // Render reward text horizontally\r\n        else {\r\n          return (\r\n            // <TSpan\r\n            //   y={y - 40}\r\n            //   dx={this.fontSize * 0.07}\r\n            //   key={`arc-${i}-slice-${j}`}>\r\n            //   {number.charAt(j)}\r\n            // </TSpan>\r\n            \r\n            <Svg height=\"100\" width=\"200\">\r\n  <G rotation=\"50\" origin=\"100, 50\">\r\n    <Line x1=\"60\" y1=\"10\" x2=\"140\" y2=\"10\" stroke=\"#060\" />\r\n\r\n    <Rect x=\"60\" y=\"20\" height=\"50\" width=\"80\" stroke=\"#060\" fill=\"#060\" />\r\n\r\n    <Text x=\"100\" y=\"75\" stroke=\"#600\" fill=\"#600\" textAnchor=\"middle\">\r\n      Text grouped with shapes\r\n    </Text>\r\n  </G>\r\n</Svg>\r\n          );\r\n        }\r\n      })}\r\n    </Text>\r\n  );\r\n\r\n  _renderSvgWheel = () => {\r\n    return (\r\n      <View style={styles.container}>\r\n        {this._renderKnob()}\r\n        <Animated.View\r\n          style={{\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            transform: [\r\n              {\r\n                rotate: this._angle.interpolate({\r\n                  inputRange: [-this.onedeg, 0, this.onedeg],\r\n                  outputRange: [\r\n                    `-${this.onedeg}deg`,\r\n                    `0deg`,\r\n                    `${this.onedeg}deg`,\r\n                  ],\r\n                }),\r\n              },\r\n            ],\r\n            backgroundColor: this.props.options.backgroundColor\r\n              ? this.props.options.backgroundColor\r\n              : '#fff',\r\n            width: height/2,\r\n            height:height/2,\r\n            borderRadius: (width - 20) / 2,\r\n            borderWidth: this.props.options.borderWidth\r\n              ? this.props.options.borderWidth\r\n              : 2,\r\n            borderColor: this.props.options.borderColor\r\n              ? this.props.options.borderColor\r\n              : '#fff',\r\n            opacity: this.state.wheelOpacity,\r\n          }}>\r\n          <AnimatedSvg\r\n            width={this.state.gameScreen}\r\n            height={this.state.gameScreen}\r\n            viewBox={`0 0 ${width} ${width}`}\r\n            style={{\r\n              transform: [{rotate: `-${this.angleOffset}deg`}],\r\n              margin: 10,\r\n            }}>\r\n            <G y={width / 2} x={width / 2}>\r\n              {this._wheelPaths.map((arc, i) => {\r\n                const [x, y] = arc.centroid;\r\n                const number = arc.value.toString();\r\n\r\n                return (\r\n                  <G key={`arc-${i}`}>\r\n                    <Path d={arc.path} strokeWidth={2} fill={arc.color} />\r\n                    <G\r\n                      rotation={\r\n                        (i * this.onedeg) / this.numberOfSegments +\r\n                        this.angleOffset\r\n                      }\r\n                      origin={`${x}, ${y}`}>\r\n                      {this._textRender(x, y, number, i)}\r\n                    </G>\r\n                  </G>\r\n                );\r\n              })}\r\n            </G>\r\n          </AnimatedSvg>\r\n        </Animated.View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  _renderKnob = () => {\r\n    const knobSize = this.props.options.knobSize\r\n      ? this.props.options.knobSize\r\n      : 20;\r\n    // [0, this.numberOfSegments]\r\n    const YOLO = Animated.modulo(\r\n      Animated.divide(\r\n        Animated.modulo(\r\n          Animated.subtract(this._angle, this.angleOffset),\r\n          this.onedeg,\r\n        ),\r\n        new Animated.Value(this.angleBySegment),\r\n      ),\r\n      1,\r\n    );\r\n\r\n    return (\r\n      <Animated.View\r\n        style={{\r\n          width: knobSize,\r\n          height: knobSize * 2,\r\n          justifyContent: 'flex-end',\r\n          zIndex: 1,\r\n          opacity: this.state.wheelOpacity,\r\n          transform: [\r\n            {\r\n              rotate: YOLO.interpolate({\r\n                inputRange: [-1, -0.5, -0.0001, 0.0001, 0.5, 1],\r\n                outputRange: [\r\n                  '0deg',\r\n                  '0deg',\r\n                  '35deg',\r\n                  '-35deg',\r\n                  '0deg',\r\n                  '0deg',\r\n                ],\r\n              }),\r\n            },\r\n          ],\r\n        }}>\r\n        <Svg\r\n          width={knobSize}\r\n          height={(knobSize * 100) / 57}\r\n          viewBox={`0 0 57 100`}\r\n          style={{\r\n            transform: [{translateY: 8}],\r\n          }}>\r\n          <Image\r\n            source={\r\n              this.props.options.knobSource\r\n                ? this.props.options.knobSource\r\n                : require('../assets/images/knob.png')\r\n            }\r\n            style={{ width: knobSize, height: (knobSize * 100) / 57 }}\r\n          />\r\n        </Svg>\r\n      </Animated.View>\r\n    );\r\n  };\r\n\r\n  _renderTopToPlay() {\r\n    if (this.state.started == false) {\r\n      return (\r\n        <TouchableOpacity\r\n         onPress={() => this._onPress()}\r\n         >\r\n          {this.props.options.playButton()}\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <View style={styles.container}>\r\n        <TouchableOpacity\r\n          style={{\r\n            position: 'absolute',\r\n            width: width,\r\n            height: height / 2,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}>\r\n          <Animated.View style={[styles.content, {padding: 10}]}>\r\n            {this._renderSvgWheel()}\r\n          </Animated.View>\r\n        </TouchableOpacity>\r\n        {this.props.options.playButton ? this._renderTopToPlay() : null}\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WheelOfFortune;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n   \r\n  },\r\n  content: {},\r\n  startText: {\r\n    fontSize: 50,\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    textShadowColor: 'rgba(0, 0, 0, 0.4)',\r\n    textShadowOffset: {width: -1, height: 1},\r\n    textShadowRadius: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}